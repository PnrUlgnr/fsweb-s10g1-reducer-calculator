{"ast":null,"code":"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, clearDisplay, CLEAR_DISPLAY, MEMORY_ADD } from \"./../actions\";\nexport const initialState = {\n  total: 100,\n  operation: \"+\",\n  memory: 100\n};\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case \"+\":\n      return num1 + num2;\n    case \"*\":\n      return num1 * num2;\n    case \"-\":\n      return num1 - num2;\n    default:\n      return;\n  }\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ONE:\n      return {\n        ...state,\n        total: state.total + 1\n      };\n    case APPLY_NUMBER:\n      return {\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation)\n      };\n    case CHANGE_OPERATION:\n      return {\n        ...state,\n        operation: action.payload\n      };\n    case CLEAR_DISPLAY:\n      return {\n        ...state,\n        operation: action.payload\n      };\n    case MEMORY_ADD:\n      return {\n        ...state,\n        memory: state.total\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_ONE","APPLY_NUMBER","CHANGE_OPERATION","clearDisplay","CLEAR_DISPLAY","MEMORY_ADD","initialState","total","operation","memory","calculateResult","num1","num2","reducer","state","action","type","payload"],"sources":["/Users/pinarulgener/workintech/fsweb-s10g1-reducer-calculator/src/reducers/index.js"],"sourcesContent":["import {\n  ADD_ONE,\n  APPLY_NUMBER,\n  CHANGE_OPERATION,\n  clearDisplay,\n  CLEAR_DISPLAY,\n  MEMORY_ADD,\n} from \"./../actions\";\n\nexport const initialState = {\n  total: 100,\n  operation: \"+\",\n  memory: 100,\n};\n\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case \"+\":\n      return num1 + num2;\n    case \"*\":\n      return num1 * num2;\n    case \"-\":\n      return num1 - num2;\n    default:\n      return;\n  }\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ONE:\n      return {\n        ...state,\n        total: state.total + 1,\n      };\n\n    case APPLY_NUMBER:\n      return {\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation),\n      };\n\n    case CHANGE_OPERATION:\n      return {\n        ...state,\n        operation: action.payload,\n      };\n\n    case CLEAR_DISPLAY:\n      return {\n        ...state,\n        operation: action.payload,\n      };\n\n    case MEMORY_ADD:\n      return {\n        ...state,\n        memory: state.total,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,YAAY,EACZC,gBAAgB,EAChBC,YAAY,EACZC,aAAa,EACbC,UAAU,QACL,cAAc;AAErB,OAAO,MAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,GAAG;EACVC,SAAS,EAAE,GAAG;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEJ,SAAS,KAAK;EACjD,QAAQA,SAAS;IACf,KAAK,GAAG;MACN,OAAOG,IAAI,GAAGC,IAAI;IACpB,KAAK,GAAG;MACN,OAAOD,IAAI,GAAGC,IAAI;IACpB,KAAK,GAAG;MACN,OAAOD,IAAI,GAAGC,IAAI;IACpB;MACE;EACJ;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKhB,OAAO;MACV,OAAO;QACL,GAAGc,KAAK;QACRP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAG;MACvB,CAAC;IAEH,KAAKN,YAAY;MACf,OAAO;QACL,GAAGa,KAAK;QACRP,KAAK,EAAEG,eAAe,CAACI,KAAK,CAACP,KAAK,EAAEQ,MAAM,CAACE,OAAO,EAAEH,KAAK,CAACN,SAAS;MACrE,CAAC;IAEH,KAAKN,gBAAgB;MACnB,OAAO;QACL,GAAGY,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACE;MACpB,CAAC;IAEH,KAAKb,aAAa;MAChB,OAAO;QACL,GAAGU,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACE;MACpB,CAAC;IAEH,KAAKZ,UAAU;MACb,OAAO;QACL,GAAGS,KAAK;QACRL,MAAM,EAAEK,KAAK,CAACP;MAChB,CAAC;IACH;MACE,OAAOO,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}